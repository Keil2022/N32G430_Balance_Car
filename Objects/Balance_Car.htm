<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Balance_Car.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Balance_Car.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Sep 09 17:32:57 2022
<BR><P>
<H3>Maximum Stack Usage =        348 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EXTI9_5_IRQHandler &rArr; mpu_dmp_get_data &rArr; dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[1e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3d]">CAN_RX0_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3e]">CAN_RX1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3f]">CAN_SCE_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3c]">CAN_TX_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[20]">COMP_1_2_3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[16]">DMA_Channel1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[17]">DMA_Channel2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[18]">DMA_Channel3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[19]">DMA_Channel4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1a]">DMA_Channel5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1b]">DMA_Channel6_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1c]">DMA_Channel7_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1d]">DMA_Channel8_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from control.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[34]">LPTIM_WKUP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1f]">MMU_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[10]">RCC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[d]">RTC_TAMPER_STAMP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[e]">RTC_WKUP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[41]">System_Initializes</a> from system_n32g430.o(.text) referenced from startup_n32g430.o(.text)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from encoder.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from encoder.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3a]">TIM5_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[31]">UART3_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from n32g430_it.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_n32g430.o(.text) referenced from startup_n32g430.o(RESET)
 <LI><a href="#[42]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32g430.o(.text)
 <LI><a href="#[43]">fputc</a> from log.o(.text) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[40]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(.text)
</UL>
<P><STRONG><a name="[1a5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[44]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[194]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1a6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1a7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1a8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1a9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1aa]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>COMP_1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>LPTIM_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>MMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g430.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>System_Initializes</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, system_n32g430.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = System_Initializes &rArr; System_Clock_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Clock_Set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(.text)
</UL>
<P><STRONG><a name="[1ab]"></a>System_Clock_Frequency_Update</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, system_n32g430.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>main</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; log_init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP12F_IO0_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Restart
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, n32g430_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Clear
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g430_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>IIC_Init</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, myiic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
</UL>

<P><STRONG><a name="[5a]"></a>IIC_Start</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_Start &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>

<P><STRONG><a name="[5d]"></a>IIC_Stop</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_Stop &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[5e]"></a>IIC_Wait_Ack</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input_Pin_Data_Get
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>

<P><STRONG><a name="[60]"></a>IIC_Ack</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_Ack &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[61]"></a>IIC_NAck</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IIC_NAck &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[62]"></a>IIC_Send_Byte</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Byte
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>

<P><STRONG><a name="[63]"></a>IIC_Read_Byte</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, myiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = IIC_Read_Byte &rArr; IIC_NAck &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input_Pin_Data_Get
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Byte
</UL>

<P><STRONG><a name="[64]"></a>MPU_Write_Byte</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Gyro_Fsr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Accel_Fsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Rate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_LPF
</UL>

<P><STRONG><a name="[65]"></a>MPU_Set_LPF</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Rate
</UL>

<P><STRONG><a name="[66]"></a>MPU_Set_Rate</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_LPF
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
</UL>

<P><STRONG><a name="[67]"></a>MPU_Read_Byte</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
</UL>

<P><STRONG><a name="[68]"></a>MPU_Set_Accel_Fsr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
</UL>

<P><STRONG><a name="[69]"></a>MPU_Set_Gyro_Fsr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
</UL>

<P><STRONG><a name="[6a]"></a>MPU_Init</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Gyro_Fsr
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Accel_Fsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Byte
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Set_Rate
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Byte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[6c]"></a>MPU_Read_Len</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MPU_Read_Len &rArr; IIC_Read_Byte &rArr; IIC_NAck &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_int_status
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_bias
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_temperature
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_reg
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_reg
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_reg
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reg_dump
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_self_test
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accel_prod_shift
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Accelerometer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Gyroscope
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Temperature
</UL>

<P><STRONG><a name="[6d]"></a>MPU_Get_Temperature</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[72]"></a>MPU_Get_Gyroscope</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MPU_Get_Gyroscope &rArr; MPU_Read_Len &rArr; IIC_Read_Byte &rArr; IIC_NAck &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>MPU_Get_Accelerometer</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MPU_Get_Accelerometer &rArr; MPU_Read_Len &rArr; IIC_Read_Byte &rArr; IIC_NAck &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>MPU_Write_Len</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_bias
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
</UL>

<P><STRONG><a name="[77]"></a>mpu_reg_dump</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[78]"></a>mpu_read_reg</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[79]"></a>mpu_set_int_latched</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
</UL>

<P><STRONG><a name="[7a]"></a>mpu_set_sensors</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[7b]"></a>mpu_set_bypass</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[7c]"></a>mpu_reset_fifo</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, inv_mpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = mpu_reset_fifo &rArr; MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
</UL>

<P><STRONG><a name="[7d]"></a>mpu_configure_fifo</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
</UL>

<P><STRONG><a name="[7e]"></a>mpu_set_lpf</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
</UL>

<P><STRONG><a name="[7f]"></a>mpu_lp_accel_mode</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_int_latched
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
</UL>

<P><STRONG><a name="[80]"></a>mpu_set_sample_rate</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[81]"></a>mpu_set_accel_fsr</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[82]"></a>mpu_set_gyro_fsr</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
</UL>

<P><STRONG><a name="[83]"></a>mpu_init</STRONG> (Thumb, 416 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[85]"></a>mget_ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, inv_mpu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_temperature
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_reg
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_reg
</UL>

<P><STRONG><a name="[84]"></a>mpu_get_gyro_reg</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mget_ms
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[86]"></a>mpu_get_accel_reg</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mget_ms
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[87]"></a>mpu_get_temperature</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mget_ms
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[88]"></a>mpu_set_accel_bias</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[93]"></a>mpu_get_gyro_fsr</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[94]"></a>mpu_get_accel_fsr</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[95]"></a>mpu_get_lpf</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[96]"></a>mpu_get_sample_rate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[1ac]"></a>mpu_get_compass_sample_rate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>mpu_set_compass_sample_rate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>mpu_get_gyro_sens</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[a0]"></a>mpu_get_accel_sens</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_accel_bias
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[97]"></a>mpu_get_fifo_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[1ae]"></a>mpu_get_power_state</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>mpu_get_int_status</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[8a]"></a>mpu_read_fifo</STRONG> (Thumb, 520 bytes, Stack size 48 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mget_ms
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>

<P><STRONG><a name="[8b]"></a>mpu_read_fifo_stream</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, inv_mpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[1af]"></a>mpu_set_int_level</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>mpu_set_dmp_state</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[92]"></a>mpu_run_self_test</STRONG> (Thumb, 278 bytes, Stack size 88 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_fifo_config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_sample_rate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_lpf
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_fsr
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyro_self_test
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_self_test
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[98]"></a>mpu_write_mem</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_interrupt_mode
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_gyro_cal
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_pedometer_walk_time
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_pedometer_step_count
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_timeout
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_time
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_thresh
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time_multi
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_count
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_axes
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_orientation
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_gyro_bias
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_fifo_rate
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_accel_bias
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>

<P><STRONG><a name="[99]"></a>mpu_read_mem</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_get_pedometer_walk_time
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_get_pedometer_step_count
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>

<P><STRONG><a name="[9a]"></a>mpu_load_firmware</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_load_motion_driver_firmware
</UL>

<P><STRONG><a name="[1b0]"></a>mpu_get_dmp_state</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[1b1]"></a>setup_compass</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>mpu_get_compass_reg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[1b3]"></a>mpu_get_compass_fsr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>mpu_lp_motion_interrupt</STRONG> (Thumb, 512 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_fifo_config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_sample_rate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_lpf
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_fsr
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_gyro_fsr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_accel_fsr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_accel_mode
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_lpf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_int_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
</UL>

<P><STRONG><a name="[9d]"></a>run_self_test</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_gyro_bias
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_accel_bias
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_sens
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_gyro_sens
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[a3]"></a>inv_row_2_scale</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_orientation_matrix_to_scalar
</UL>

<P><STRONG><a name="[a2]"></a>inv_orientation_matrix_to_scalar</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_row_2_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[a4]"></a>mpu_dmp_init</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_orientation
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_fifo_rate
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_load_motion_driver_firmware
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_orientation_matrix_to_scalar
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sample_rate
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[a9]"></a>mpu_dmp_get_data</STRONG> (Thumb, 520 bytes, Stack size 120 bytes, inv_mpu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = mpu_dmp_get_data &rArr; dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>dmp_load_motion_driver_firmware</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[a6]"></a>dmp_set_orientation</STRONG> (Thumb, 290 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[9f]"></a>dmp_set_gyro_bias</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[a1]"></a>dmp_set_accel_bias</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_sens
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_self_test
</UL>

<P><STRONG><a name="[a8]"></a>dmp_set_fifo_rate</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[1b4]"></a>dmp_get_fifo_rate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>dmp_set_tap_thresh</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_get_accel_fsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b0]"></a>dmp_set_tap_axes</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b1]"></a>dmp_set_tap_count</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b2]"></a>dmp_set_tap_time</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b3]"></a>dmp_set_tap_time_multi</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b4]"></a>dmp_set_shake_reject_thresh</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b5]"></a>dmp_set_shake_reject_time</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b6]"></a>dmp_set_shake_reject_timeout</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[b7]"></a>dmp_get_pedometer_step_count</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
</UL>

<P><STRONG><a name="[b8]"></a>dmp_set_pedometer_step_count</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>

<P><STRONG><a name="[b9]"></a>dmp_get_pedometer_walk_time</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_mem
</UL>

<P><STRONG><a name="[ba]"></a>dmp_set_pedometer_walk_time</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>

<P><STRONG><a name="[bb]"></a>dmp_enable_6x_lp_quat</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[bd]"></a>dmp_enable_lp_quat</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[be]"></a>dmp_enable_gyro_cal</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_feature
</UL>

<P><STRONG><a name="[a7]"></a>dmp_enable_feature</STRONG> (Thumb, 530 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_gyro_cal
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_timeout
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_time
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_shake_reject_thresh
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time_multi
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_time
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_count
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_axes
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_set_tap_thresh
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_init
</UL>

<P><STRONG><a name="[1b5]"></a>dmp_get_enabled_features</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>dmp_set_interrupt_mode</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_write_mem
</UL>

<P><STRONG><a name="[aa]"></a>dmp_read_fifo</STRONG> (Thumb, 514 bytes, Stack size 88 bytes, inv_mpu_dmp_motion_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_gesture
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_read_fifo_stream
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mget_ms
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[1b6]"></a>dmp_register_tap_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>dmp_register_android_orient_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, inv_mpu_dmp_motion_driver.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>ESP12F_IO0_Init</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, esp12f_io0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ESP12F_IO0_Init &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>LED_GPIO_Init</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LED_GPIO_Init &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>Key_GPIO_Init</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Key_GPIO_Init &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>Key_Scanf</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, key.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input_Pin_Data_Get
</UL>

<P><STRONG><a name="[1b8]"></a>KEY_Handle</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, key.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>ADC_RCC_Configuration</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_RCC_Configuration &rArr; ADC_Clock_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_1M_Clock_Config
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[c5]"></a>ADC_GPIO_Configuration</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ADC_GPIO_Configuration &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[48]"></a>ADC_Configuration</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ADC_Configuration &rArr; ADC_GPIO_Configuration &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Request_Remap
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Sequence_Conversion_Number_Config
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Software_Conversion_Operation
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ON
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Structure
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Flag_Status_Get
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Transfer_Enable
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Sample_Time_Config
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Operation
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_Configuration
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>Common_ADTIM_GPIO_Initialize</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Common_ADTIM_GPIO_Initialize &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[d4]"></a>Common_ADTIM_RCC_Initialize</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Common_ADTIM_RCC_Initialize &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk2_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[4b]"></a>TIMx_PWM_Init</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TIMx_PWM_Init &rArr; Common_ADTIM_GPIO_Initialize &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Output_Enable
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Struct_Initialize
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Struct_Initialize
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_RCC_Initialize
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_GPIO_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>Encoder_TIM2_Init</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Encoder_TIM2_Init &rArr; Common_GPTIM_RCC_Initialize &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Struct_Initialize
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Encoder_Interface_Set
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Struct_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Set
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>Encoder_TIM3_Init</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Encoder_TIM3_Init &rArr; Common_GPTIM_RCC_Initialize &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Enable
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Struct_Initialize
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Encoder_Interface_Set
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Struct_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Set
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_On
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>Read_Speed</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read_Speed
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Set
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_Interrupt_Status_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Get
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_Interrupt_Status_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Get
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Interrupt_Status_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[e2]"></a>Common_GPTIM_RCC_Initialize</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, gptim_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Common_GPTIM_RCC_Initialize &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Pclk1_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
</UL>

<P><STRONG><a name="[f0]"></a>Common_GPTIM_GPIO_Initialize</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, gptim_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[d8]"></a>Common_TIM_Base_Initialize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, timer_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Common_TIM_Base_Initialize &rArr; TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Struct_Initialize
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[f1]"></a>Common_TIM_NVIC_Initialize</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, timer_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
</UL>

<P><STRONG><a name="[f3]"></a>Common_TIM_DMA_Config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, timer_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Request_Remap
</UL>

<P><STRONG><a name="[f4]"></a>Common_TIM_DMA_Start</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, timer_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Disable
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
</UL>

<P><STRONG><a name="[101]"></a>Limit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, motor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[f8]"></a>GFP_abs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, motor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
</UL>

<P><STRONG><a name="[f6]"></a>Load</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Load
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Compare4_Set
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Compare3_Set
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Compare2_Set
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Compare1_Set
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFP_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop
</UL>

<P><STRONG><a name="[fc]"></a>Stop</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, motor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFP_abs
</UL>

<P><STRONG><a name="[100]"></a>Velocity</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Velocity
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[ff]"></a>Vertical</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, control.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = EXTI9_5_IRQHandler &rArr; mpu_dmp_get_data &rArr; dmp_read_fifo &rArr; mpu_read_fifo_stream &rArr; mpu_reset_fifo &rArr; MPU_Write_Len &rArr; IIC_Send_Byte &rArr; SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Accelerometer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Gyroscope
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Interrupt_Status_Get
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Interrupt_Status_Clear
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Vertical
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Velocity
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Limit
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Speed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g430.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>Turn</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, control.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[4e]"></a>log_init</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = log_init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>Usart_SendByte</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendString
</UL>

<P><STRONG><a name="[108]"></a>Usart_SendString</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[43]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[109]"></a>fgetc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Status_Get
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Data_Receive
</UL>

<P><STRONG><a name="[10a]"></a>DMA_Configuration</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Configuration &rArr; DMA_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Request_Remap
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[10b]"></a>GPIO_Configuration</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[10c]"></a>NVIC_Configuration</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[10d]"></a>RCC_Configuration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Clock_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[4f]"></a>Usart_DMA_Init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Usart_DMA_Init &rArr; USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Flag_Clear
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Transfer_Enable
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>DMA_Restart</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Restart
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Flag_Status_Clear
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Current_Data_Transfer_Number_Set
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Disable
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SysTick_Delay_Us</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, bsp_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SysTick_Delay_Us &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_SysTick_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[51]"></a>SysTick_Delay_Ms</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, bsp_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SysTick_Delay_Ms &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DBG_SysTick_Config
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reset_fifo
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_bypass
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_sensors
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b9]"></a>NVIC_Priority_Group_Set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>NVIC_Initializes</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Initializes
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_NVIC_Initialize
</UL>

<P><STRONG><a name="[1ba]"></a>NVIC_Vector_Table_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>NVIC_System_LowPower_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>NVIC_System_Low_Power_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>SysTick_Clock_Source_Set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>ADC_Vrefint_Get</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>ADC_Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Reset
</UL>

<P><STRONG><a name="[114]"></a>ADC_Multichannels_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[115]"></a>ADC_Multichannels_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[116]"></a>ADC_Continue_Conversion_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[117]"></a>ADC_Continue_Conversion_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[118]"></a>ADC_Regular_Group_External_Trigger_Source_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[119]"></a>ADC_Data_Alignment_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[11a]"></a>ADC_Regular_Channels_Number_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes
</UL>

<P><STRONG><a name="[cb]"></a>ADC_Initializes</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Channels_Number_Config
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Data_Alignment_Config
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Regular_Group_External_Trigger_Source_Config
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Continue_Conversion_Disable
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Continue_Conversion_Enable
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Multichannels_Disable
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Multichannels_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[ca]"></a>ADC_Initializes_Structure</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[cf]"></a>ADC_ON</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[1bf]"></a>ADC_OFF</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>ADC_DMA_Transfer_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[1c0]"></a>ADC_DMA_Transfer_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>ADC_Interrupts_Enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[121]"></a>ADC_Interrupts_Disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[d1]"></a>ADC_Calibration_Operation</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[d2]"></a>ADC_Regular_Channels_Software_Conversion_Operation</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[1c1]"></a>ADC_Discontinuous_Mode_Channel_Count_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>ADC_Discontinuous_Mode_Config</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>ADC_Channel_Sample_Time_Config</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Channel_Sample_Time_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[cd]"></a>ADC_Regular_Sequence_Conversion_Number_Config</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Regular_Sequence_Conversion_Number_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[1c3]"></a>ADC_External_Trigger_Conversion_Config</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c4]"></a>ADC_Regular_Group_Conversion_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>ADC_Injected_Group_Autoconversion_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>ADC_Injected_Group_Autoconversion_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>ADC_Injected_Group_External_Trigger_Source_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>ADC_Injected_Channels_Software_Conversion_Operation</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>ADC_Injected_Sequence_Conversion_Number_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>ADC_Injected_Channels_Number_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>ADC_Injected_Channels_Offset_Config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>ADC_Injected_Group_Conversion_Data_Get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>ADC_Analog_Watchdog_Mode_Channel_Config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>ADC_Analog_Watchdog_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>ADC_Analog_Watchdog_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>ADC_Analog_Watchdog_HighThresholds_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>ADC_Analog_Watchdog_LowThresholds_Config</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>ADC_Temperature_Sensor_And_Vrefint_Channel_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>ADC_Temperature_Sensor_And_Vrefint_Channel_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>ADC_INTFlag_Status_Get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>ADC_Flag_Status_Get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[1d5]"></a>ADC_INTFlag_Status_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>ADC_Flag_Status_Clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>ADC_Vbat_Monitor_Enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[11d]"></a>ADC_Vbat_Monitor_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[11e]"></a>ADC_Deep_Power_Mode_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[11f]"></a>ADC_Deep_Power_Mode_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[123]"></a>ADC_AHB_Clock_Mode_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[122]"></a>ADC_PLL_Clock_Mode_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[124]"></a>ADC_Calibration_Auto_Load_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[125]"></a>ADC_Calibration_Auto_Load_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[126]"></a>ADC_Differential_Mode_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[127]"></a>ADC_Differential_Mode_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[128]"></a>ADC_Data_Resolution_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[129]"></a>ADC_Sample_Time_Level_Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Initializes_Ex
</UL>

<P><STRONG><a name="[11b]"></a>ADC_Initializes_Ex</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, n32g430_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Sample_Time_Level_Config
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Data_Resolution_Config
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Differential_Mode_Disable
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Differential_Mode_Enable
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Auto_Load_Disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration_Auto_Load_Enable
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PLL_Clock_Mode_Config
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AHB_Clock_Mode_Config
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Deep_Power_Mode_Disable
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Deep_Power_Mode_Enable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Vbat_Monitor_Disable
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Vbat_Monitor_Enable
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Interrupts_Disable
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Interrupts_Enable
</UL>

<P><STRONG><a name="[1d7]"></a>ADC_Initializes_StructureEx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>ADC_Bypass_Calibration_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>ADC_Bypass_Calibration_Disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>ADC_Differential_Channels_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_adc.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>ADC_Clock_Mode_Config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, n32g430_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Clock_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_PLL_Clock_Prescaler_Enable
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_PLL_Clock_Disable
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_Hclk_Enable
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADC_Hclk_Config
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PLL_Clock_Mode_Config
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AHB_Clock_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
</UL>

<P><STRONG><a name="[c6]"></a>DMA_Reset</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_DMA_Config
</UL>

<P><STRONG><a name="[138]"></a>DMA_Memory_2_Memory_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[137]"></a>DMA_Priority_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[136]"></a>DMA_Circular_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[135]"></a>DMA_Memory_Data_Width_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[134]"></a>DMA_Peripheral_Data_Width_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[133]"></a>DMA_Memory_Addr_Increment_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[132]"></a>DMA_Peripheral_Addr_Increment_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[131]"></a>DMA_Buffer_Size_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[130]"></a>DMA_Destination_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[12f]"></a>DMA_Memory_Address_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[12e]"></a>DMA_Peripheral_Address_Config</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Initializes
</UL>

<P><STRONG><a name="[c7]"></a>DMA_Initializes</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, n32g430_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Initializes
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Address_Config
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Address_Config
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Destination_Config
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Buffer_Size_Config
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Addr_Increment_Config
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Addr_Increment_Config
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Peripheral_Data_Width_Config
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_Data_Width_Config
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Circular_Mode_Config
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Priority_Config
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Memory_2_Memory_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_DMA_Config
</UL>

<P><STRONG><a name="[1db]"></a>DMA_Structure_Initializes</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>DMA_Channel_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Restart
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_DMA_Start
</UL>

<P><STRONG><a name="[f5]"></a>DMA_Channel_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Restart
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_DMA_Start
</UL>

<P><STRONG><a name="[1dc]"></a>DMA_Interrupts_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>DMA_Interrupts_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>DMA_Current_Data_Transfer_Number_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Restart
</UL>

<P><STRONG><a name="[1de]"></a>DMA_Current_Data_Transfer_Number_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[1df]"></a>DMA_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>DMA_Flag_Status_Clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Restart
</UL>

<P><STRONG><a name="[1e0]"></a>DMA_Interrupt_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>DMA_Interrupt_Status_Clear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>DMA_Channel_Request_Remap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_DMA_Config
</UL>

<P><STRONG><a name="[1e2]"></a>EXTI_Reset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>EXTI_LineCmd_Disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[13b]"></a>EXTI_Trigger_Config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[13a]"></a>EXTI_Work_Mode_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Peripheral_Initializes
</UL>

<P><STRONG><a name="[139]"></a>EXTI_Peripheral_Initializes</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_exti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Work_Mode_Config
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Trigger_Config
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineCmd_Disable
</UL>

<P><STRONG><a name="[1e3]"></a>EXTI_Structure_Initializes</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>EXTI_Software_Interrupt_Trigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>EXTI_Flag_Status_Get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>EXTI_Flag_Status_Clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>EXTI_Interrupt_Status_Get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[fe]"></a>EXTI_Interrupt_Status_Clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[1e7]"></a>EXTI_RTC_Time_Stamp_Select</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_exti.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>GPIO_Reset</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Reset
</UL>

<P><STRONG><a name="[13f]"></a>GPIOA_Pin_Reset</STRONG> (Thumb, 256 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[140]"></a>GPIOB_Pin_Reset</STRONG> (Thumb, 230 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[141]"></a>GPIOC_Pin_Reset</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[142]"></a>GPIOD_Pin_Reset</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ALLPin_Reset
</UL>

<P><STRONG><a name="[1e8]"></a>AFIO_EXTI_Reset</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>GPIO_ALLPin_Reset</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOD_Pin_Reset
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Pin_Reset
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Pin_Reset
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Pin_Reset
</UL>

<P><STRONG><a name="[143]"></a>GPIO_Alternate_Set</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[144]"></a>GPIO_Mode_Set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[145]"></a>GPIO_Pull_Set</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Pull_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[146]"></a>GPIO_SlewRate_Set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SlewRate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[147]"></a>GPIO_Driver_Set</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_Driver_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[58]"></a>GPIO_Peripheral_Initialize</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, n32g430_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_Peripheral_Initialize &rArr; GPIO_Mode_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Driver_Set
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SlewRate_Set
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pull_Set
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Mode_Set
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Slaver_Address
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP12F_IO0_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_GPIO_Initialize
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_GPIO_Initialize
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_Configuration
</UL>

<P><STRONG><a name="[148]"></a>GPIO_Alternate_Function_Reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
</UL>

<P><STRONG><a name="[57]"></a>GPIO_Structure_Initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Slaver_Address
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP12F_IO0_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_GPIO_Initialize
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_GPIO_Initialize
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GPIO_Configuration
</UL>

<P><STRONG><a name="[5f]"></a>GPIO_Input_Pin_Data_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scanf
</UL>

<P><STRONG><a name="[1e9]"></a>GPIO_Input_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>GPIO_Output_Pin_Data_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>GPIO_Output_Data_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>GPIO_Pins_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP12F_IO0_Init
</UL>

<P><STRONG><a name="[5c]"></a>GPIO_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Slaver_Address
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[1ec]"></a>GPIO_PBSC_Pins_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>GPIO_PBC_Pins_Reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ee]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ef]"></a>GPIO_Pin_Toggle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>GPIO_Pin_Lock_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>GPIO_Pin_Remap_Set</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>GPIO_EXTI_Line_Set</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>AFIO_SPI_NSS_Mode_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>AFIO_ADC_External_Trigger_Remap_Set</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f5]"></a>AFIO_5V_Tolerance_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>AFIO_5V_Tolerance_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>AFIO_Filter_Stage_Ctrl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>AFIO_EFT_Enable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>AFIO_EFT_Disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>AFIO_Digital_EFT_Enable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>AFIO_Digital_EFT_Disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, n32g430_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>RCC_Reset</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>RCC_HSE_Config</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>RCC_Flag_Status_Get</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Stable_Wait
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Stable_Wait
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
</UL>

<P><STRONG><a name="[d7]"></a>RCC_Clocks_Frequencies_Value_Get</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, n32g430_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_RCC_Initialize
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Baud_Rate_Config
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSI_Stable_Wait
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Stable_Wait
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Stable_Wait
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Stable_Wait
</UL>

<P><STRONG><a name="[14a]"></a>RCC_HSE_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[1fe]"></a>RCC_Clock_Security_System_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>RCC_Clock_Security_System_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>RCC_HSI_Calibration_Value_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>RCC_HSI_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>RCC_HSI_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>RCC_HSI_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[203]"></a>RCC_PLL_Config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>RCC_PLL_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>RCC_PLL_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>RCC_Sysclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>RCC_Sysclk_Source_Get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>RCC_Hclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>RCC_Pclk1_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
</UL>

<P><STRONG><a name="[d6]"></a>RCC_Pclk2_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_RCC_Initialize
</UL>

<P><STRONG><a name="[209]"></a>RCC_Interrupt_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>RCC_Interrupt_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>RCC_TIM1_8_Clock_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>RCC_ADC_1M_Clock_Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
</UL>

<P><STRONG><a name="[12d]"></a>RCC_ADC_PLL_Clock_Prescaler_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[12b]"></a>RCC_ADC_PLL_Clock_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[12c]"></a>RCC_ADC_Hclk_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[12a]"></a>RCC_ADC_Hclk_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Clock_Mode_Config
</UL>

<P><STRONG><a name="[20c]"></a>RCC_ADC_Hclk_Disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>RCC_LSE_Trim_Config</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
</UL>

<P><STRONG><a name="[ef]"></a>RCC_APB1_Peripheral_Clock_Enable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LPTIM_Clock_Config
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Config
</UL>

<P><STRONG><a name="[14d]"></a>RCC_LSE_Config</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSE_Trim_Config
</UL>

<P><STRONG><a name="[20d]"></a>RCC_LSE_Clock_Security_System_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>RCC_LSE_Clock_Security_System_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>RCC_LSE_Clock_Security_System_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>RCC_LSE_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[210]"></a>RCC_LSI_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[211]"></a>RCC_LSI_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>RCC_LSI_Stable_Wait</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Flag_Status_Get
</UL>

<P><STRONG><a name="[212]"></a>RCC_RTC_Clock_Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>RCC_RTC_Clock_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>RCC_RTC_Clock_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>RCC_LPTIM_Clock_Config</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Clock_Enable
</UL>

<P><STRONG><a name="[215]"></a>RCC_LPTIM_Reset</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>RCC_LPTIM_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>RCC_LPTIM_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>RCC_AHB_Peripheral_Clock_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Slaver_Address
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESP12F_IO0_Init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_DMA_Config
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_RCC_Initialize
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RCC_Configuration
</UL>

<P><STRONG><a name="[218]"></a>RCC_AHB_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>RCC_APB2_Peripheral_Clock_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_GPTIM_RCC_Initialize
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_ADTIM_RCC_Initialize
</UL>

<P><STRONG><a name="[219]"></a>RCC_APB2_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>RCC_APB1_Peripheral_Clock_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>RCC_AHB_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Reset
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
</UL>

<P><STRONG><a name="[149]"></a>RCC_APB2_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Alternate_Function_Reset
</UL>

<P><STRONG><a name="[153]"></a>RCC_APB1_Peripheral_Reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Reset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Reset
</UL>

<P><STRONG><a name="[21b]"></a>RCC_Backup_Reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>RCC_MCO_PLL_Prescaler_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21d]"></a>RCC_MCO_Source_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>RCC_Reset_Flag_Clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>RCC_Interrupt_Status_Get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>RCC_Interrupt_Status_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_rcc.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>TIM_Reset</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Reset
</UL>

<P><STRONG><a name="[154]"></a>TIM_Base_Count_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[221]"></a>TIM_Base_Center_Aligned_Mode_OC4_7_8_9_Trigger_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>TIM_Asymmetric_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>TIM_Asymmetric_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>TIM_Base_Auto_Reload_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[157]"></a>TIM_Base_Prescaler_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[159]"></a>TIM_Base_Reload_Mode_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[158]"></a>TIM_Base_Repeat_Count_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[15a]"></a>TIM_Base_Channel1</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[15c]"></a>TIM_Base_Channel2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[15d]"></a>TIM_Base_Channel3</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[15e]"></a>TIM_Base_Channel4</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[15b]"></a>TIM_Base_OCrefClear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[155]"></a>TIM_Clock_Division_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Initialize
</UL>

<P><STRONG><a name="[e4]"></a>TIM_Base_Initialize</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_Base_Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Clock_Division_Set
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_OCrefClear
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel3
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel2
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Channel1
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Repeat_Count_Set
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Reload_Mode_Set
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Prescaler_Set
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Auto_Reload_Set
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_Count_Mode_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
</UL>

<P><STRONG><a name="[e3]"></a>TIM_Base_Struct_Initialize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_TIM_Base_Initialize
</UL>

<P><STRONG><a name="[ea]"></a>TIM_Base_Count_Set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Speed
</UL>

<P><STRONG><a name="[ec]"></a>TIM_Base_Count_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Speed
</UL>

<P><STRONG><a name="[224]"></a>TIM_Auto_Reload_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>TIM_Base_Prescaler_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>TIM_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
</UL>

<P><STRONG><a name="[226]"></a>TIM_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>TIM_Output_Channel1_Preload_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>TIM_Output_Channel2_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>TIM_Output_Channel3_Preload_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>TIM_Output_Channel4_Preload_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[22b]"></a>TIM_Output_Channel5_Preload_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>TIM_Output_Channel6_Preload_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>TIM_Output_Channel7_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>TIM_Output_Channel8_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>TIM_Output_Channel9_Preload_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>TIM_Auto_Reload_Preload_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>TIM_Auto_Reload_Preload_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>TIM_Update_Event_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>TIM_Update_Event_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>TIM_Update_Request_Source_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>TIM_Event_Generate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>TIM_Commutation_Event_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>TIM_Commutation_Event_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>TIM_Capture_Compare_Control_Preload_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>TIM_Capture_Compare_Control_Preload_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>TIM_Compare1_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
</UL>

<P><STRONG><a name="[f9]"></a>TIM_Compare2_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
</UL>

<P><STRONG><a name="[fa]"></a>TIM_Compare3_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
</UL>

<P><STRONG><a name="[fb]"></a>TIM_Compare4_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load
</UL>

<P><STRONG><a name="[23a]"></a>TIM_Compare5_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>TIM_Compare6_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>TIM_Compare7_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>TIM_Compare8_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>TIM_Compare9_Set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>TIM_Compare1_D_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[240]"></a>TIM_Compare2_D_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>TIM_Compare3_D_Set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>TIM_Compare4_D_Set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>TIM_Compare_Capture1_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>TIM_Compare_Capture2_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>TIM_Compare_Capture3_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>TIM_Compare_Capture4_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>TIM_Compare_Capture5_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>TIM_Compare_Capture6_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>TIM_Compare_Capture7_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>TIM_Compare_Capture8_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>TIM_Compare_Capture9_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>TIM_Compare_Capture1_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>TIM_Compare_Capture2_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>TIM_Compare_Capture3_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>TIM_Compare_Capture4_D_Get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>TIM_Trigger_Source_Select</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Internal_Trig_To_Ext_Set
</UL>

<P><STRONG><a name="[163]"></a>Input_Channel1_Config</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Input_Channel1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
</UL>

<P><STRONG><a name="[162]"></a>Input_Channel2_Config</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Input_Channel2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_As_External_Clock
</UL>

<P><STRONG><a name="[16b]"></a>Input_Channel3_Config</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Input_Channel3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[16d]"></a>Input_Channel4_Config</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Input_Channel4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[165]"></a>TIM_External_Trigger_Filter_Set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[167]"></a>TIM_External_Trigger_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[166]"></a>TIM_External_Trigger_Polarity_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode2_Set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Clock_Mode1_Set
</UL>

<P><STRONG><a name="[250]"></a>TIM_Internal_Clock_Set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>TIM_Input_Capture1_Prescaler_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
</UL>

<P><STRONG><a name="[16a]"></a>TIM_Input_Capture2_Prescaler_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWM_Input_Channel_Config
</UL>

<P><STRONG><a name="[16c]"></a>TIM_Input_Capture3_Prescaler_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[16e]"></a>TIM_Input_Capture4_Prescaler_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Channel_Initialize
</UL>

<P><STRONG><a name="[15f]"></a>TIM_Internal_Trig_To_Ext_Set</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_Source_Select
</UL>

<P><STRONG><a name="[161]"></a>TIM_Trigger_As_External_Clock</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Trigger_Source_Select
</UL>

<P><STRONG><a name="[164]"></a>TIM_External_Clock_Mode1_Set</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Polarity_Set
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Prescaler_Set
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Filter_Set
</UL>

<P><STRONG><a name="[168]"></a>TIM_External_Clock_Mode2_Set</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Polarity_Set
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Prescaler_Set
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_External_Trigger_Filter_Set
</UL>

<P><STRONG><a name="[251]"></a>TIM_Slave_Mode_Select</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>TIM_Master_Slave_Mode_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>TIM_Output_Trigger_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>TIM_OC4REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>TIM_OC4REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>TIM_OC7REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>TIM_OC7REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>TIM_OC8REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>TIM_OC8REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>TIM_OC9REF_Trigger_To_ADC_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>TIM_OC9REF_Trigger_To_ADC_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>TIM_One_Pulse_Mode_Select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>TIM_Input_Struct_Initialize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
</UL>

<P><STRONG><a name="[e7]"></a>TIM_Input_Channel_Initialize</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_Input_Channel_Initialize &rArr; Input_Channel4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture4_Prescaler_Set
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture3_Prescaler_Set
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture2_Prescaler_Set
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture1_Prescaler_Set
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel4_Config
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel3_Config
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
</UL>

<P><STRONG><a name="[16f]"></a>TIM_PWM_Input_Channel_Config</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture2_Prescaler_Set
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Input_Capture1_Prescaler_Set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel2_Config
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Channel1_Config
</UL>

<P><STRONG><a name="[171]"></a>TIM_Output_Channel_Polarity_Set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Output_Channel_Polarity_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel6_Initialize
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
</UL>

<P><STRONG><a name="[173]"></a>TIM_Output_Channel_N_Polarity_Set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Output_Channel_N_Polarity_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[172]"></a>TIM_Capture_Compare_Ch_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel6_Initialize
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
</UL>

<P><STRONG><a name="[170]"></a>TIM_Capture_Compare_Ch_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel6_Initialize
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel5_Initialize
</UL>

<P><STRONG><a name="[174]"></a>TIM_Capture_Compare_Ch_N_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[175]"></a>TIM_Capture_Compare_Ch_N_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel4_Initialize
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel3_Initialize
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel2_Initialize
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel1_Initialize
</UL>

<P><STRONG><a name="[25d]"></a>TIM_CCEN_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>TIM_Output_Channel_Mode_Set</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>TIM_Forced_Output_Channel1_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>TIM_Forced_Output_Channel2_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>TIM_Forced_Output_Channel3_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>TIM_Forced_Output_Channel4_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>TIM_Forced_Output_Channel5_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>TIM_Forced_Output_Channel6_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>TIM_Output_Channel1_Fast_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>TIM_Output_Channel2_Fast_Set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>TIM_Output_Channel3_Fast_Set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>TIM_Output_Channel4_Fast_Set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[269]"></a>TIM_Output_Channel5_Fast_Set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>TIM_Output_Channel6_Fast_Set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>TIM_Output_Channel1_Reference_Clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>TIM_Output_Channel2_Reference_Clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>TIM_Output_Channel3_Reference_Clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>TIM_Output_Channel4_Reference_Clear</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>TIM_Output_Channel5_Reference_Clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>TIM_Output_Channel6_Reference_Clear</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>TIM_Output_Channel1_Initialize</STRONG> (Thumb, 140 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_Output_Channel1_Initialize &rArr; TIM_Output_Channel_N_Polarity_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[db]"></a>TIM_Output_Channel2_Initialize</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_Output_Channel2_Initialize &rArr; TIM_Output_Channel_N_Polarity_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[dc]"></a>TIM_Output_Channel3_Initialize</STRONG> (Thumb, 146 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_Output_Channel3_Initialize &rArr; TIM_Output_Channel_N_Polarity_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[dd]"></a>TIM_Output_Channel4_Initialize</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_Output_Channel4_Initialize &rArr; TIM_Output_Channel_N_Polarity_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Disable
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_N_Enable
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_N_Polarity_Set
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[176]"></a>TIM_Output_Channel5_Initialize</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[177]"></a>TIM_Output_Channel6_Initialize</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, n32g430_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Disable
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Capture_Compare_Ch_Enable
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Output_Channel_Polarity_Set
</UL>

<P><STRONG><a name="[e1]"></a>TIM_PWM_Output_Enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[271]"></a>TIM_PWM_Output_Disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>TIM_Output_Channel_Struct_Initialize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[179]"></a>TIM_Lock_Up_Break_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[17a]"></a>TIM_Lock_Up_Break_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[17b]"></a>TIM_Pvd_Break_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[17c]"></a>TIM_Pvd_Break_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[178]"></a>TIM_IOM_Comp_Break</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Break_And_Dead_Time_Set
</UL>

<P><STRONG><a name="[df]"></a>TIM_Break_And_Dead_Time_Set</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Break_And_Dead_Time_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IOM_Comp_Break
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Pvd_Break_Disable
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Pvd_Break_Enable
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Lock_Up_Break_Disable
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Lock_Up_Break_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[de]"></a>TIM_Break_And_Dead_Time_Struct_Initialize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_PWM_Init
</UL>

<P><STRONG><a name="[e9]"></a>TIM_Interrupt_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
</UL>

<P><STRONG><a name="[272]"></a>TIM_Interrupt_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>TIM_Interrupt_Status_Get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Interrupt_Status_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>TIM_Interrupt_Status_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[273]"></a>TIM_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>TIM_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>TIM_Dma_Config</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>TIM_Dma_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>TIM_Dma_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>TIM_Hall_Sensor_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>TIM_Hall_Sensor_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>TIM_Encoder_Interface_Set</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, n32g430_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Encoder_Interface_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM3_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_TIM2_Init
</UL>

<P><STRONG><a name="[27a]"></a>TIM_Channel1_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[27b]"></a>TIM_Channel2_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[27c]"></a>TIM_Channel3_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[27d]"></a>TIM_Channel4_Filter_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>TIM_Break_Filter_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>TIM_Channel1_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[280]"></a>TIM_Channel1_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[281]"></a>TIM_Channel2_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[282]"></a>TIM_Channel2_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[283]"></a>TIM_Channel3_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>TIM_Channel3_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>TIM_Channel4_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[286]"></a>TIM_Channel4_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[287]"></a>TIM_Break_Filter_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[288]"></a>TIM_Break_Filter_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_tim.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>USART_Reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2_Peripheral_Reset
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1_Peripheral_Reset
</UL>

<P><STRONG><a name="[183]"></a>USART_Hardware_Flow_Control_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[182]"></a>USART_Mode_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[181]"></a>USART_Parity_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[180]"></a>USART_Stop_Bits_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[17f]"></a>USART_Word_Length_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[17e]"></a>USART_Baud_Rate_Config</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Initializes
</UL>

<P><STRONG><a name="[104]"></a>USART_Initializes</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, n32g430_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Initializes &rArr; USART_Baud_Rate_Config &rArr; RCC_Clocks_Frequencies_Value_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Baud_Rate_Config
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Word_Length_Config
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Stop_Bits_Config
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Parity_Config
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Mode_Config
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Hardware_Flow_Control_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[289]"></a>USART_Structure_Initializes</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>USART_Last_Bit_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[187]"></a>USART_Phase_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[186]"></a>USART_Polarity_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[185]"></a>USART_Clock_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Initializes
</UL>

<P><STRONG><a name="[184]"></a>USART_Clock_Initializes</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, n32g430_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Clock_Config
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Polarity_Config
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Phase_Config
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Last_Bit_Config
</UL>

<P><STRONG><a name="[28a]"></a>USART_Clock_Structure_Initializes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>USART_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[28b]"></a>USART_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>USART_Interrput_Enable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>USART_Interrput_Disable</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>USART_DMA_Transfer_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[28e]"></a>USART_DMA_Transfer_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>USART_Address_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>USART_WakeUp_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>USART_Receiver_Wakeup_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>USART_Receiver_Wakeup_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>USART_LIN_Break_Detect_Length_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[294]"></a>USART_LIN_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>USART_LIN_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>USART_Data_Send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[54]"></a>USART_Data_Receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[296]"></a>USART_Break_Frame_Send</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>USART_Guard_Time_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[298]"></a>USART_Prescaler_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[299]"></a>USART_Smart_Card_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>USART_Smart_Card_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[29b]"></a>USART_Smart_Card_NACK_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>USART_Smart_Card_NACK_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>USART_Half_Duplex_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>USART_Half_Duplex_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>USART_IrDA_Mode_Set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>USART_IrDA_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[2a1]"></a>USART_IrDA_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>USART_Flag_Status_Get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendString
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[53]"></a>USART_Flag_Clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, n32g430_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_DMA_Init
</UL>

<P><STRONG><a name="[2a2]"></a>USART_Interrupt_Status_Get</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[2a3]"></a>USART_Interrupt_Status_Clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, n32g430_usart.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_ldivmod</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_st_biases
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_lp_quat
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_enable_6x_lp_quat
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2a4]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a5]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2a6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[9b]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_load_firmware
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Temperature
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[190]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[191]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Temperature
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Temperature
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Get_Temperature
</UL>

<P><STRONG><a name="[189]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[18c]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2a8]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2a9]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2aa]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2ab]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[2ac]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18e]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[45]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2ad]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[196]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2ae]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[6b]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_reg_dump
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Init
</UL>

<P><STRONG><a name="[19b]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[ac]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_asin &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[1a0]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[ae]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_dmp_get_data
</UL>

<P><STRONG><a name="[19d]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[198]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[1a1]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[19a]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[19c]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[2af]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2b0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2b1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[199]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[1a2]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[19e]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>

<P><STRONG><a name="[19f]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[46]"></a>System_Clock_Set</STRONG> (Thumb, 254 bytes, Stack size 20 bytes, system_n32g430.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System_Clock_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Initializes
</UL>

<P><STRONG><a name="[75]"></a>Set_Slaver_Address</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Pins_Reset
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB_Peripheral_Clock_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Structure_Initialize
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Peripheral_Initialize
</UL>

<P><STRONG><a name="[76]"></a>set_int_enable</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_lp_motion_interrupt
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_set_dmp_state
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_configure_fifo
</UL>

<P><STRONG><a name="[8c]"></a>get_accel_prod_shift</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accel_self_test
</UL>

<P><STRONG><a name="[8d]"></a>accel_self_test</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accel_prod_shift
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[8e]"></a>gyro_self_test</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[8f]"></a>get_st_biases</STRONG> (Thumb, 1138 bytes, Stack size 64 bytes, inv_mpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Write_Len
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU_Read_Len
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu_run_self_test
</UL>

<P><STRONG><a name="[c0]"></a>decode_gesture</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, inv_mpu_dmp_motion_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = decode_gesture
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmp_read_fifo
</UL>

<P><STRONG><a name="[111]"></a>DBG_SysTick_Config</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, bsp_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DBG_SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Us
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Delay_Ms
</UL>

<P><STRONG><a name="[197]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[1a4]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1a3]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
